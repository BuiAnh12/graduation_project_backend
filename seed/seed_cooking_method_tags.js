const mongoose = require("mongoose");
require("dotenv").config({ path: require("path").join(__dirname, "../.env") });

const CookingMethodTag = require("../models/cooking_method_tags.model");
const TagCategory = require("../models/tag_categories.model"); // nh·ªõ ch·ªânh ƒë√∫ng path

const MONGO_URI = process.env.MONGODB_URL;

async function seedCookingMethodTags() {
  const methods = [
    "s·ªëng","∆∞·ªõp","lu·ªôc","n·∫•u nh·ªè l·ª≠a","h·∫•p","ch·∫ßn","tr·ª•ng","x√†o",
    "r√°n ch·∫£o","chi√™n ng·∫≠p d·∫ßu","n∆∞·ªõng","quay","n∆∞·ªõng l√≤","om","h·∫ßm","hun kh√≥i","√°p ch·∫£o"
  ];

  try {
    await mongoose.connect(MONGO_URI);
    console.log("‚úÖ Connected to MongoDB");

    // üîç Ki·ªÉm tra ho·∫∑c t·∫°o tag category "Cooking Method"
    let methodCategory = await TagCategory.findOne({ name: "Cooking Method" });
    if (!methodCategory) {
      methodCategory = await TagCategory.create({ name: "Cooking Method" });
      console.log("üÜï Created Tag Category: Cooking Method");
    }

    for (const name of methods) {
      const existingTag = await CookingMethodTag.findOne({ name });
      if (existingTag) {
        console.log(`‚ö†Ô∏è  ${name} already exists, skipping...`);
        continue;
      }

      await CookingMethodTag.create({
        name,
        tag_category_id: methodCategory._id,
      });

      console.log(`‚úÖ Created cooking method tag: ${name}`);
    }

    console.log("üéâ Done seeding cooking method tags!");
    await mongoose.connection.close();
  } catch (err) {
    console.error("‚ùå Error seeding cooking method tags:", err);
    await mongoose.connection.close();
  }
}

seedCookingMethodTags();
